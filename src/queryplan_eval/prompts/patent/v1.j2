你将收到一个描述人工合成肽的 JSON 对象，包含字段 `sequence`（由空格分隔的标准或非标准三字母残基）和 `features`（含若干修饰信息，其中 `name_key` 为 "MOD_RES" 的条目表示残基修饰）。

请将其转换为“专利风格的线性肽表示”，规则如下：

- 将 `sequence` 按空格分割，得到残基列表，位置编号从 1 开始。
- 解析所有 `features` 中 `name_key == "MOD_RES"` 的条目：
  - 从 `location` 字段提取位置（格式如 "(n).. (n)" 或 "(n) (n)"，取 n 作为整数索引）；
  - 从 `other_information` 获取修饰残基名称。
- 对每个位置 i（从 1 到序列长度）：
  - 若存在 MOD_RES 指定该位置，则根据修饰名按以下规则输出：
    - 若为 "Pen" → 输出 `Pen`
    - 若为 "N-Me-Arg" → 输出 `(N-Me-Arg)`
    - 若为 "Beta-Glu" 或 "β-Glu" → 输出 `(β-Glu)`
    - 若以 "D-" 开头（如 D-Lys, D-Phe）→ 输出 `(D-XXX)`（保留原名）
    - 其他非常规残基 → 用括号包围，如 `(Xxx)`
  - 否则（无修饰）：
    - 若原序列残基为 "Xaa" 且无 MOD_RES 指定 → 保留 `Xaa`
    - 若为标准 L-氨基酸（如 Ala, Ser, Lys 等）→ 直接输出三字母代码，不加括号
- 所有残基按顺序用连字符 `-` 连接，**仅输出一行结果，不加句号、分号或额外说明**。

你的返回值的类型是 string。
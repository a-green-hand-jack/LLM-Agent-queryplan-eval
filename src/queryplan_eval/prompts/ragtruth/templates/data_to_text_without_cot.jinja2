# Hallucination Detection Task

You are a hallucination detection expert. Your task is to identify hallucinated content in an article by comparing it with structured reference data.

## Input Format
**Reference Data (JSON format):**
{{ reference }}

**Generated Article:**
{{ response }}

## Output Format Requirements **[CRITICAL]**

**You must strictly follow this JSON format without deviation:**

### Standard Case (Hallucinations Detected)
Output a JSON object with the `hallucination_list` field:
```json
{
  "hallucination_list": ["exact span 1", "exact span 2", ...]
}
```

### No Hallucinations Case
Output a JSON object with empty list:
```json
{
  "hallucination_list": []}
```

### Output Constraints
- **Strictly prohibit explanatory text, code block markers, or extra symbols**
- **Strictly prohibit any other format**
- Each span in the list must be a string (with quotes)
- Empty list must be `[]` (without quotes)

=========================
## Hallucination Detection Rules

### What Constitutes Hallucination
Content in the article that:
- **Contradicts information in the reference data**
- **Adds factual claims not supported by the reference data**
- **Contains incorrect numbers, dates, names, or statistics**
- **Misrepresents relationships or causality present in the reference**

### What Does NOT Constitute Hallucination
- **Reasonable paraphrasing or rephrasing of reference content**
- **Natural language variations that preserve the original meaning**
- **Connecting words or transitional phrases that don't add new factual claims**
- **Style or formatting differences**

=========================
## Span Extraction Requirements **[CRITICAL]**

### Exact Substring Rule
- Each hallucinated span MUST be copied EXACTLY character-by-character from the article
- Think of it as using Ctrl+C to copy a text fragment from the original article
- **DO NOT modify, paraphrase, summarize, or correct any text**
- Preserve all spelling, grammar, punctuation, and spacing exactly as it appears

### Granularity Rules
- **You CANNOT mark the entire article as hallucination**
- Even if the article has multiple issues, identify only specific problematic spans
- Each span should be a meaningful fragment (phrase, sentence, or clause level)
- **Avoid overly granular word-by-word marking unless necessary**

### Validation Checklist
Before outputting, verify each span:
- ✓ Is this span an exact substring from the article?
- ✓ Does this span actually contain hallucinated content?
- ✓ Is this span not the entire article?
- ✓ Is this span meaningful and coherent?

=========================
## Examples

**Example 1: Number Hallucination**
- Article: "The company reported a 15% increase in revenue and expanded to 5 new countries"
- Reference supports: 10% increase, 3 new countries
- Valid Output: `{"hallucination_list": ["15%", "5 new countries"]}` ✓
- Invalid: `{"hallucination_list": ["20%", "several countries"]}` ✗ (not in original text)

**Example 2: No Hallucinations**  
- Article: "The research shows promising results in the clinical trial"
- Reference supports all claims
- Valid Output: `{"hallucination_list": []}` ✓

**Example 3: Multiple Hallucinations**
- Article: "Dr. Smith published 50 papers in 2023 and won the Nobel Prize"
- Reference supports: 30 papers, no Nobel Prize mentioned
- Valid Output: `{"hallucination_list": ["50 papers", "won the Nobel Prize"]}` ✓

**Example 4: Cannot Mark Entire Article**
- Even if entire article is problematic:
- Invalid: `{"hallucination_list": ["The company reported a 15% increase..."]}` ✗ (entire article)
- Valid: `{"hallucination_list": ["15%", "5 new countries", "doubled profits"]}` ✓ (specific spans)

=========================

**After outputting the JSON, stop immediately. Do not add any explanation, reasoning, or repeat the JSON.**